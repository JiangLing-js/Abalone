{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fb4c2e7f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:28.775101Z",
     "iopub.status.busy": "2024-04-16T08:35:28.774410Z",
     "iopub.status.idle": "2024-04-16T08:35:30.791020Z",
     "shell.execute_reply": "2024-04-16T08:35:30.789712Z"
    },
    "papermill": {
     "duration": 2.028213,
     "end_time": "2024-04-16T08:35:30.793602",
     "exception": false,
     "start_time": "2024-04-16T08:35:28.765389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e4/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e4/train.csv\n",
      "/kaggle/input/playground-series-s4e4/test.csv\n",
      "/kaggle/input/abalone1/abalone.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "from sklearn.metrics import mean_squared_error\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c93e5b1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:30.809652Z",
     "iopub.status.busy": "2024-04-16T08:35:30.808528Z",
     "iopub.status.idle": "2024-04-16T08:35:44.597292Z",
     "shell.execute_reply": "2024-04-16T08:35:44.596110Z"
    },
    "papermill": {
     "duration": 13.799326,
     "end_time": "2024-04-16T08:35:44.600037",
     "exception": false,
     "start_time": "2024-04-16T08:35:30.800711",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting pytorch-tabnet\r\n",
      "  Downloading pytorch_tabnet-4.1.0-py3-none-any.whl.metadata (15 kB)\r\n",
      "Requirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from pytorch-tabnet) (1.26.4)\r\n",
      "Requirement already satisfied: scikit_learn>0.21 in /opt/conda/lib/python3.10/site-packages (from pytorch-tabnet) (1.2.2)\r\n",
      "Requirement already satisfied: scipy>1.4 in /opt/conda/lib/python3.10/site-packages (from pytorch-tabnet) (1.11.4)\r\n",
      "Requirement already satisfied: torch>=1.3 in /opt/conda/lib/python3.10/site-packages (from pytorch-tabnet) (2.1.2+cpu)\r\n",
      "Requirement already satisfied: tqdm>=4.36 in /opt/conda/lib/python3.10/site-packages (from pytorch-tabnet) (4.66.1)\r\n",
      "Requirement already satisfied: joblib>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from scikit_learn>0.21->pytorch-tabnet) (1.3.2)\r\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit_learn>0.21->pytorch-tabnet) (3.2.0)\r\n",
      "Requirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (3.13.1)\r\n",
      "Requirement already satisfied: typing-extensions in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (4.9.0)\r\n",
      "Requirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (1.12)\r\n",
      "Requirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (3.2.1)\r\n",
      "Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (3.1.2)\r\n",
      "Requirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch>=1.3->pytorch-tabnet) (2024.2.0)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.3->pytorch-tabnet) (2.1.3)\r\n",
      "Requirement already satisfied: mpmath>=0.19 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.3->pytorch-tabnet) (1.3.0)\r\n",
      "Downloading pytorch_tabnet-4.1.0-py3-none-any.whl (44 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.5/44.5 kB\u001b[0m \u001b[31m1.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: pytorch-tabnet\r\n",
      "Successfully installed pytorch-tabnet-4.1.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install pytorch-tabnet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c4107f44",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:44.617496Z",
     "iopub.status.busy": "2024-04-16T08:35:44.616612Z",
     "iopub.status.idle": "2024-04-16T08:35:44.951633Z",
     "shell.execute_reply": "2024-04-16T08:35:44.950493Z"
    },
    "papermill": {
     "duration": 0.346194,
     "end_time": "2024-04-16T08:35:44.953937",
     "exception": false,
     "start_time": "2024-04-16T08:35:44.607743",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Length  Diameter  Height  Whole weight  Whole weight.1  Whole weight.2  \\\n",
      "0   0.455     0.365   0.095        0.5140          0.2245          0.1010   \n",
      "1   0.350     0.265   0.090        0.2255          0.0995          0.0485   \n",
      "2   0.530     0.420   0.135        0.6770          0.2565          0.1415   \n",
      "\n",
      "   Shell weight  Rings  Sex_F  Sex_I  Sex_M  \n",
      "0          0.15     15  False  False   True  \n",
      "1          0.07      7  False  False   True  \n",
      "2          0.21      9   True  False  False  \n"
     ]
    }
   ],
   "source": [
    "train_dataset_root = r\"/kaggle/input/playground-series-s4e4/train.csv\"\n",
    "train_dataset_root2 = r\"/kaggle/input/abalone1/abalone.csv\"\n",
    "test_dataset_root = r\"/kaggle/input/playground-series-s4e4/test.csv\"\n",
    "train_dataset = pd.read_csv(train_dataset_root)\n",
    "# one hot\n",
    "train_dataset = pd.get_dummies(train_dataset, columns=['Sex'])\n",
    "test_dataset = pd.read_csv(test_dataset_root)\n",
    "test_dataset = pd.get_dummies(test_dataset, columns=['Sex'])\n",
    "# print(train_dataset.head(3))\n",
    "train_dataset2 = pd.read_csv(train_dataset_root2)\n",
    "train_dataset2 = pd.get_dummies(train_dataset2, columns=['Sex'])\n",
    "train_dataset2 = train_dataset2.rename(columns={'Shucked weight': 'Whole weight.1', 'Viscera weight': 'Whole weight.2'})\n",
    "print(train_dataset2.head(3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8e1ea852",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:44.970932Z",
     "iopub.status.busy": "2024-04-16T08:35:44.970560Z",
     "iopub.status.idle": "2024-04-16T08:35:48.551253Z",
     "shell.execute_reply": "2024-04-16T08:35:48.550153Z"
    },
    "papermill": {
     "duration": 3.591937,
     "end_time": "2024-04-16T08:35:48.553547",
     "exception": false,
     "start_time": "2024-04-16T08:35:44.961610",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABNsAAANXCAYAAAAMwFn8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzde3xT9f0/8FfuaZMmvTcUSrkpUO4CQkUQAakIOoQ5nSjInEwsfL/KdA5/Krevom7qnKs4NwdOZDodTEUEuYMCCkXugoBAS+/XpE2b+/n9kSYQ2kIvSU6Svp6PRx7f5ZyT5B2+9pNz3uf9eX8kgiAIICIiIiIiIiIionaTih0AERERERERERFRpGCyjYiIiIiIiIiIyE+YbCMiIiIiIiIiIvITJtuIiIiIiIiIiIj8hMk2IiIiIiIiIiIiP2GyjYiIiIiIiIiIyE+YbCMiIiIiIiIiIvITJtuIiIiIiIiIiIj8hMk2IiIiIiIiIiIiP2GyjchPxo4di/79+4sdBhGJbPHixZBIJGKHQUQUEh566CF069atza/VarX+DYiIQpZEIsG8efP89n47duyARCLBjh07/PaegdSeeD2v/eSTT/wfGLUJk20UclatWgWJRIIDBw6IHUojhYWFWLx4MQ4dOiR2KEQUJJ4xyfNQq9VITU1FVlYW/vznP6OmpkbsEFvtxIkTWLx4Mc6fPy92KEQUIq51/hXKNxXr6uqwePHisLmgJoo0//73vyGRSLBu3bpG+wYNGgSJRILt27c32te1a1fcdNNNwQiRLrNmzRr86U9/EjuMiMdkG1ErFBYWYsmSJUy2EXVAS5cuxfvvv48VK1Zg/vz5AIDHH38cAwYMwJEjR7zHPfvss6ivrxcrzBY5ceIElixZwmQbEQXc3/72N5w6dSqgn1FXV4clS5Yw2UYkkptvvhkA8PXXX/tsN5lMOHbsGORyOb755hufffn5+cjPz/e+loAxY8agvr4eY8aMCejnMNkWHHKxAyAiIgoHkyZNwrBhw7zPFy5ciG3btmHKlCm466678MMPPyAqKgpyuRxyecf8eTWbzdBoNGKHQUQhRKFQiB0CEQVYamoqunfv3ijZtnfvXgiCgHvuuafRPs9zJtsukUqlUKvVYodBfsLKNgpLBQUF+NWvfoWUlBSoVCr069cP//jHP3yO8cxb//e//40XXngBXbp0gVqtxvjx43HmzJlG75mTk4MePXogKioKN954I3bv3o2xY8di7Nix3vcbPnw4AGD27NneKWWrVq3yeZ8TJ07g1ltvRXR0NDp37oxXXnklIP8GRCS+cePG4bnnnsOFCxewevVqAE33bFu5ciXGjRuH5ORkqFQqZGRkYMWKFY3er1u3bpgyZQp27NiBYcOGISoqCgMGDPBWa6xduxYDBgyAWq3G0KFD8f333zd6j5MnT+LnP/854uPjoVarMWzYMHz22Wfe/atWrcI999wDALj11lu9Y9nlFSFffvklRo8eDY1Gg5iYGEyePBnHjx/3+RxPL6WzZ8/ijjvuQExMDGbMmNGmf0ciCk+rV6/G0KFDERUVhfj4eNx3333Iz8/3Oaapnm0VFRV48MEHodPpEBsbi1mzZuHw4cNNnlcB7vO+qVOnQqvVIikpCU8++SScTicA4Pz580hKSgIALFmyxDumLV68OBBfmYiacfPNN+P777/3qe7/5ptv0K9fP0yaNAn79u2Dy+Xy2SeRSDBq1KhG7/Xf//4X/fv3917nbdy4sdEx33//PSZNmgSdTgetVovx48dj3759LYr122+/xe233w69Xo/o6GjccsstjSrvriQIAhITE7FgwQLvNpfLhdjYWMhkMlRXV3u3v/zyy5DL5aitrfVuu9b5GdB8z7ZrXadezuVyXfXad+zYsfjiiy9w4cIF73jZ1r6adHVMtlHYKSkpwciRI7FlyxbMmzcPb7zxBnr16oWHH364yXLYl156CevWrcOTTz6JhQsXYt++fY0uCFesWIF58+ahS5cueOWVVzB69GhMnToVFy9e9B7Tt29fLF26FAAwZ84cvP/++3j//fd9ynyrqqpw++23Y9CgQXj11VfRp08fPP300/jyyy8D849BRKJ78MEHAQBfffVVs8esWLEC6enpeOaZZ/Dqq68iLS0Njz32GHJychode+bMGdx///248847sXz5clRVVeHOO+/EBx98gCeeeAIPPPAAlixZgrNnz+IXv/iFz4nr8ePHMXLkSPzwww/4/e9/j1dffRUajQZTp0719lEZM2YM/ud//gcA8Mwzz3jHsr59+wIA3n//fUyePBlarRYvv/wynnvuOZw4cQI333xzo2mnDocDWVlZSE5Oxh//+EdMnz69Xf+WRCQ+o9GI8vLyRg+73e5z3AsvvICZM2fiuuuuw2uvvYbHH38cW7duxZgxY3wuOq/kcrlw55134l//+hdmzZqFF154AUVFRZg1a1aTxzudTmRlZSEhIQF//OMfccstt+DVV1/FO++8AwBISkry3ry4++67vWPatGnT/PMPQkQtcvPNN8Nut+Pbb7/1bvvmm29w00034aabboLRaMSxY8d89vXp0wcJCQk+7/P111/jsccew3333YdXXnkFFosF06dPR0VFhfeY48ePY/To0Th8+DB+97vf4bnnnsO5c+cwduxYn89vyrZt2zBmzBiYTCYsWrQIL774IqqrqzFu3Dh89913zb7OkxjctWuXd9uRI0dgNBq938dj9+7dGDJkiHeBl5acnzWnJdepl7vWte//+3//D4MHD0ZiYqJ3vOSU0gARiELMypUrBQDC/v37m9z/8MMPC506dRLKy8t9tt93332CXq8X6urqBEEQhO3btwsAhL59+wpWq9V73BtvvCEAEI4ePSoIgiBYrVYhISFBGD58uGC3273HrVq1SgAg3HLLLd5t+/fvFwAIK1eubBTXLbfcIgAQ/vnPf3q3Wa1WwWAwCNOnT2/1vwMRhYZrjUmCIAh6vV4YMmSIIAiCsGjRIuHKn1fPuHS5rKwsoUePHj7b0tPTBQDCnj17vNs2bdokABCioqKECxcueLf/9a9/FQAI27dv924bP368MGDAAMFisXi3uVwu4aabbhKuu+4677aPP/640WsFQRBqamqE2NhY4ZFHHvHZXlxcLOj1ep/ts2bNEgAIv//975v7ZyGiMOIZ66726NevnyAIgnD+/HlBJpMJL7zwgs97HD16VJDL5T7bZ82aJaSnp3uf/+c//xEACH/605+825xOpzBu3LhG51iecWbp0qU+nzNkyBBh6NCh3udlZWUCAGHRokV++JcgorY4fvy4AEBYtmyZIAiCYLfbBY1GI7z33nuCIAhCSkqKkJOTIwiCIJhMJkEmkzU63wAgKJVK4cyZM95thw8fFgAIb775pnfb1KlTBaVSKZw9e9a7rbCwUIiJiRHGjBnj3ea5HvSc77hcLuG6664TsrKyBJfL5T2urq5O6N69u3Dbbbdd9Tv+4Q9/EGQymWAymQRBEIQ///nPQnp6unDjjTcKTz/9tCAI7vEsNjZWeOKJJ7yva+n52ZXxtuY6taXXvoIgCJMnT/YZlykwWNlGYUUQBPznP//BnXfe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KTFz5kzh4+NjmWr9vvvuEy+88IJl+zfffFOoVCrx/fffW01VXlBQINUp1Eltz/vfpJ5Bqq5qe96XLl0Snp6eYvbs2eLMmTPi119/FUFBQeK1116T6hTqpLbnvWDBAuHp6Sm+/vprcf78efHnn3+KqKgocffdd0t1CmQDztr+1Zeztp/14axtr73U9vPdt2+fUCqV4p133hGnT58WCxYsEC4uLiI+Pt6yzZtvvil8fHzEzz//LI4fPy4mTJggIiMjRUlJiUOdy43apYKCAvHss8+KAwcOiOTkZLFt2zbRo0cP0aZNG6HT6RzqXBYuXCj++OMPkZSUJI4ePSqmTJkiNBqNOHnypNX5NobvS4VBgwaJyZMnV1ou1feloKBAHDt2TBw7dkwAEP/3f/8njh07Ji5evCiEEOKFF14Q9913n2X78+fPCzc3N/Hcc8+J06dPi+XLlwuFQiG2bNli2eZGnw01DH7O9Xejn3+6sccee0x4e3uLXbt2Wf3NKS4uljo0p8FkWyPzwQcfiBYtWgiVSiX69OkjDh48aFk3dOhQMW3aNMvXERERAkCl14IFC+wfeD3V5rz/rTHfLNb2vPfv3y/69u0r1Gq1aNWqlXj99deFwWCwc9T1V5vzLisrE6+88oqIiooSGo1GhIeHi8cff1zk5ubaP3CyKWdt/+rLWdvP+nDWttdeavv5fvvtt6Jt27ZCpVKJjh07it9++81qvclkEvPnzxfBwcFCrVaLkSNHijNnztjjVBq0XSouLhY333yzCAwMFC4uLiIiIkLMmDHDbjfotTmXp556yrJtcHCwGDdunPj777+tjtdYvi9CCJGQkCAAiD///LPSsaT6vuzcubPKn5eK2KdNmyaGDh1aaZ9u3boJlUolWrVqJdasWVPpuNf7bKjh8HOunxv9/NONVfX5AaiyXSDbkAnBflZEREREREREREQNgWO2ERERERERERERNRAm24iIiIiIiIiIiBoIk21EREREREREREQNhMk2IiIiIiIiIiKiBsJkGxERERERERERUQNhso2IiIiIiIiIiKiBMNlGRERERERERETUQJhsIyIiIiIiIiIiaiBMthHV0QMPPICJEydKHQYROTiZTIaNGzdKHQYRkSRatmyJpUuX1nj7CxcuQCaTITY21mYxEVHj0hDXUsOGDcNTTz3VIPE0hLq0dWvXroWPj4/N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QNXjHdXUa6+9hq1bt2LQoEF4/PHHoVQq8cknn0Cv12PJkiXV7ieXy/Hpp59i7Nix6NixI6ZPn45mzZrhypUr2LlzJ7y8vPDLL79c97379+8PpVKJM2fOYObMmZblQ4YMwYoVKwDA6mYVMPfzHzRoEDp37owZM2agVatWSE9Px4EDB3D58mXExcVV+V4qlQqvvPIKnnjiCYwYMQJ33303Lly4gLVr11Y5hkhN9ezZE9988w3mzJmD3r17w8PDA7feeisAc3ny0KFDsWvXLsv2x48ft1xoJiYmQqvV4rXXXgMAdO3a1bIvUWPG9qvptV8XL17EbbfdBplMhrvuugvfffed1bG6dOnSIF3biBqbJ554AsXFxbj99tsRHR2N0tJS7N+/H9988w1atmxpGWetNt58803s3LkTffv2xYwZM9ChQwfk5OTg77//xrZt25CTk9MgsQ8ePBhvvvkmvL290blzZwDmBwPt2rXDmTNn8MADD1htP3ToUDzyyCNYvHgxYmNjcfPNN8PFxQXnzp3Dd999h/fffx933XVXle/1yCOP4MMPP8Q999yD//73vwgNDcW6dess1SN1aceioqLg4+ODjz/+GJ6ennB3d0ffvn0RGRlZ62MRkXSee+45TJo0CWvXrsWjjz5a5+PU5nrp5ptvRkhICAYOHIjg4GCcPn0aH374IW655RZ4eno2xGmRo5JgBlRyQPPmzRMAxIABAyqt+/HHHwUA4enpKQwGQ6X1AMSsWbMqLY+IiBDTpk2zWvb333+L0aNHCw8PD+Hm5iaGDx8u9u/fb7VNxZTL107NLoQQx44dE3fccYfw9/cXarVaREREiLvvvlts3769RufYu3dvAUDExMRYll2+fFkAEOHh4VXuk5SUJO6//34REhIiXFxcRLNmzcT48ePF999/f8N4ly1bJiIiIoRarRZ9+vQR+/btEz179hRjxoyptO93331ntW9ycnKlKeYLCwvFvffeK3x8fAQAERERYVmHf00xLcQ/015X9fr394WoMWP71bTar4rjVvdasGBBjT4zoqbm999/Fw8++KCIjo4WHh4eQqVSidatW4snnnhCpKenW21bm7YtPT1dzJo1S4SHhwsXFxcREhIiRo4cKVauXGnZpqrf6wULFoia3kr89ttvAoAYO3as1fKHH35YABCrV6+ucr+VK1eKnj17CldXV+Hp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7NkkJSXx3//+lxkzZrB48eKLbj81NZVbb72V0aNHs2/fPh544AGeffbZWvVKSkp4/fXX+fTTT9m8eTOnTp3iiSeeAKq/VN92223WL7Hp6ekMGjTokn0ghKgbyV3NN3fl5+cD1VeqCCEazt3dHXd3d1avXk15efmf1v2zvJaXl8c111xD79692bNnD+vXryczM5PbbrutQXF17doVX19fNm3aBFRfWfz711Cd1y7ksIbs/5577uHs2bPExcWxYsUKPvroI86dO1fndoeGhrJixQoAkpOTSU9P55133mlQe4UQzd+BAwfYvn07BoPhT+s9++yzvPHGG+zZswe9Xs99991n/d3SpUuZPXs2r7zyCnv37iUsLIy5c+daf19VVcXo0aOJjo5m//797Nixg0mTJqHRaBqtXaIZUkLU0fz585Wbm5uqrKxUBQUFSq/Xq3PnzqnPPvtMDR06VCml1IYNGxSgTp48aV0PUM8995z1dVFRkQLUt99+q5RS6plnnlGRkZHKYrFY68yZM0e5u7srs9mslFIqOjpaPfLII0oppU6ePKl0Op1KS0urEd+wYcPU9OnTLxp7bm6u0mq1avfu3cpisSgfHx/10ksvqaioKKWUUkuWLFFt2rSx1u/YsaP67LPPamzjxRdfVAMHDlRKKZWamqoAFR8fr5RS6umnn1bdunWrUf/ZZ59VgMrNzVVKKbVw4UIFqGPHjtVoZ2BgoPX1uHHj1KhRoy7ahksB1KpVq+q1jhCtieSu5pm7zGazuvHGG9XgwYPrtZ4Q4uKWL1+uvL29lbOzsxo0aJCaPn262rdvX406l8trL774orruuutqrHP69GkFqOTkZKVUzbymlFLt2rVTb7311iXj+vvf/64mT56slFLq0UcfVU8++aTy9vZWSUlJqqKiQrm6uqrvv/++QftPSkpSgNq9e7e1/tGjRxVQI6bLtXvjxo018p4QouUYN26c0ul0ys3NTRmNRgUorVarli9frpSqfWx0IR/8+OOP1m2sXbtWAaq0tFQppVRUVJQ1r10wePBg1bNnT6WUUtnZ2QpQcXFxjd9A0WzJlW2izmJiYiguLmb37t1s2bKFTp064e/vT3R0tHXuo7i4ODp06EBYWFiNdXv06GH9t5ubGx4eHtazjklJSQwcOLDGSP/gwYMpKirizJkzteJITEzEbDbTqVMn65lcd3d3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",
      "text/plain": [
       "<Figure size 1500x1000 with 8 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# 设置图形大小\n",
    "plt.figure(figsize=(15, 10))\n",
    "\n",
    "# 绘制直方图\n",
    "for i, column in enumerate(train_dataset2.columns[:-3]):  # 最后三列是性别的独热编码，不需要绘制直方图\n",
    "    plt.subplot(2, 4, i+1)\n",
    "    sns.histplot(train_dataset2[column], kde=True)\n",
    "    plt.title(column)\n",
    "\n",
    "# 绘制盒图\n",
    "plt.figure(figsize=(15, 5))\n",
    "sns.boxplot(data=train_dataset2.drop(columns=['Sex_F', 'Sex_I', 'Sex_M', \"Rings\"]))\n",
    "plt.title(\"Boxplot of Features\")\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a5d1ec27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:48.576281Z",
     "iopub.status.busy": "2024-04-16T08:35:48.575880Z",
     "iopub.status.idle": "2024-04-16T08:35:48.644796Z",
     "shell.execute_reply": "2024-04-16T08:35:48.643847Z"
    },
    "papermill": {
     "duration": 0.082871,
     "end_time": "2024-04-16T08:35:48.647123",
     "exception": false,
     "start_time": "2024-04-16T08:35:48.564252",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of X: (90615, 10)\n",
      "Shape of X2: (4177, 10)\n",
      "[[0.55 0.43 0.15 ... True False False]\n",
      " [0.63 0.49 0.145 ... True False False]\n",
      " [0.16 0.11 0.025 ... False True False]\n",
      " ...\n",
      " [0.6 0.475 0.205 ... False False True]\n",
      " [0.625 0.485 0.15 ... True False False]\n",
      " [0.71 0.555 0.195 ... False False True]]\n",
      "[[0.455 0.365 0.095 ... False False True]\n",
      " [0.35 0.265 0.09 ... False False True]\n",
      " [0.53 0.42 0.135 ... True False False]\n",
      " ...\n",
      " [0.6 0.475 0.205 ... False False True]\n",
      " [0.625 0.485 0.15 ... True False False]\n",
      " [0.71 0.555 0.195 ... False False True]]\n",
      "[11 11  6 ...  9 10 12]\n"
     ]
    }
   ],
   "source": [
    "X = train_dataset.drop(columns=[\"id\",\"Rings\"]).values  # feature\n",
    "X2 = train_dataset2.drop(columns=[\"Rings\"]).values\n",
    "print(\"Shape of X:\", X.shape)\n",
    "print(\"Shape of X2:\", X2.shape)\n",
    "X = np.concatenate((X, X2), axis=0)\n",
    "y = train_dataset['Rings'].values  # label\n",
    "y2 = train_dataset2['Rings'].values  # label\n",
    "y = np.concatenate((y, y2), axis=0)\n",
    "print(X)\n",
    "print(X2)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "30ce65af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:48.670284Z",
     "iopub.status.busy": "2024-04-16T08:35:48.669856Z",
     "iopub.status.idle": "2024-04-16T08:35:48.688230Z",
     "shell.execute_reply": "2024-04-16T08:35:48.686951Z"
    },
    "papermill": {
     "duration": 0.032419,
     "end_time": "2024-04-16T08:35:48.690163",
     "exception": false,
     "start_time": "2024-04-16T08:35:48.657744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(94792, 10)\n",
      "(94792, 3)\n",
      "(94792, 7)\n",
      "[[1 0 0]\n",
      " [1 0 0]\n",
      " [0 1 0]\n",
      " ...\n",
      " [0 0 1]\n",
      " [1 0 0]\n",
      " [0 0 1]]\n"
     ]
    }
   ],
   "source": [
    "sex_features = X[:,-3:]\n",
    "X_without_sex = X[:, :-3]\n",
    "sex_features_numeric = sex_features.astype(int)\n",
    "print(X.shape)\n",
    "print(sex_features.shape)\n",
    "print(X_without_sex.shape)\n",
    "print(sex_features_numeric)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a10f38d",
   "metadata": {
    "papermill": {
     "duration": 0.010301,
     "end_time": "2024-04-16T08:35:48.712643",
     "exception": false,
     "start_time": "2024-04-16T08:35:48.702342",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Preprocess**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7e4a2ecc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:48.735715Z",
     "iopub.status.busy": "2024-04-16T08:35:48.735106Z",
     "iopub.status.idle": "2024-04-16T08:35:52.290131Z",
     "shell.execute_reply": "2024-04-16T08:35:52.288865Z"
    },
    "papermill": {
     "duration": 3.569385,
     "end_time": "2024-04-16T08:35:52.292604",
     "exception": false,
     "start_time": "2024-04-16T08:35:48.723219",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-2.2602359  -2.21182968 -2.11147625 ...  0.          1.\n",
      "   0.        ]\n",
      " [ 1.71247228  1.86616924  1.5541619  ...  0.          0.\n",
      "   1.        ]\n",
      " [ 1.28984375  1.20349441  1.03049931 ...  0.          0.\n",
      "   1.        ]\n",
      " ...\n",
      " [ 0.10648387  0.18399468 -0.27865717 ...  0.          1.\n",
      "   0.        ]\n",
      " [ 1.50115802  1.2544694   1.29233061 ...  0.          0.\n",
      "   1.        ]\n",
      " [-1.24592743 -1.29427992 -1.06415106 ...  0.          1.\n",
      "   0.        ]]\n",
      "[[ 4]\n",
      " [11]\n",
      " [ 9]\n",
      " ...\n",
      " [ 8]\n",
      " [11]\n",
      " [ 7]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from sklearn.model_selection import train_test_split\n",
    "scaler = StandardScaler()\n",
    "X_scaled_ws = scaler.fit_transform(X_without_sex)\n",
    "X_scaled = np.concatenate((X_scaled_ws, sex_features_numeric), axis=1)\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\n",
    "print(X_train)\n",
    "\n",
    "y_train = np.reshape(y_train, (-1, 1))\n",
    "y_val = np.reshape(y_val, (-1, 1))\n",
    "print(y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e5e051d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:35:52.316646Z",
     "iopub.status.busy": "2024-04-16T08:35:52.316023Z",
     "iopub.status.idle": "2024-04-16T08:37:46.442847Z",
     "shell.execute_reply": "2024-04-16T08:37:46.441824Z"
    },
    "papermill": {
     "duration": 114.141676,
     "end_time": "2024-04-16T08:37:46.445432",
     "exception": false,
     "start_time": "2024-04-16T08:35:52.303756",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/pytorch_tabnet/abstract_model.py:82: UserWarning: Device used : cpu\n",
      "  warnings.warn(f\"Device used : {self.device}\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "epoch 0  | loss: 12.42995| val_0_rmsle: 0.19312 |  0:00:04s\n",
      "epoch 1  | loss: 3.94806 | val_0_rmsle: 0.16452 |  0:00:08s\n",
      "epoch 2  | loss: 3.83119 | val_0_rmsle: 0.16248 |  0:00:12s\n",
      "epoch 3  | loss: 3.83368 | val_0_rmsle: 0.16782 |  0:00:16s\n",
      "epoch 4  | loss: 3.80894 | val_0_rmsle: 0.15865 |  0:00:20s\n",
      "epoch 5  | loss: 3.79094 | val_0_rmsle: 0.15683 |  0:00:24s\n",
      "epoch 6  | loss: 3.7193  | val_0_rmsle: 0.15757 |  0:00:28s\n",
      "epoch 7  | loss: 3.70343 | val_0_rmsle: 0.15752 |  0:00:32s\n",
      "epoch 8  | loss: 3.71072 | val_0_rmsle: 0.15661 |  0:00:36s\n",
      "epoch 9  | loss: 3.70443 | val_0_rmsle: 0.15901 |  0:00:40s\n",
      "epoch 10 | loss: 3.70822 | val_0_rmsle: 0.15673 |  0:00:44s\n",
      "epoch 11 | loss: 3.70083 | val_0_rmsle: 0.15646 |  0:00:48s\n",
      "epoch 12 | loss: 3.68392 | val_0_rmsle: 0.15587 |  0:00:52s\n",
      "epoch 13 | loss: 3.67879 | val_0_rmsle: 0.15574 |  0:00:56s\n",
      "epoch 14 | loss: 3.67523 | val_0_rmsle: 0.15691 |  0:01:00s\n",
      "epoch 15 | loss: 3.6612  | val_0_rmsle: 0.15644 |  0:01:04s\n",
      "epoch 16 | loss: 3.65866 | val_0_rmsle: 0.15524 |  0:01:08s\n",
      "epoch 17 | loss: 3.67338 | val_0_rmsle: 0.15775 |  0:01:12s\n",
      "epoch 18 | loss: 3.66952 | val_0_rmsle: 0.16102 |  0:01:16s\n",
      "epoch 19 | loss: 3.69518 | val_0_rmsle: 0.15531 |  0:01:20s\n",
      "epoch 20 | loss: 3.65186 | val_0_rmsle: 0.15727 |  0:01:24s\n",
      "epoch 21 | loss: 3.63407 | val_0_rmsle: 0.15543 |  0:01:28s\n",
      "epoch 22 | loss: 3.65079 | val_0_rmsle: 0.15858 |  0:01:32s\n",
      "epoch 23 | loss: 3.65247 | val_0_rmsle: 0.1561  |  0:01:36s\n",
      "epoch 24 | loss: 3.62029 | val_0_rmsle: 0.15886 |  0:01:41s\n",
      "epoch 25 | loss: 3.64115 | val_0_rmsle: 0.15926 |  0:01:45s\n",
      "epoch 26 | loss: 3.65729 | val_0_rmsle: 0.15907 |  0:01:49s\n",
      "\n",
      "Early stopping occurred at epoch 26 with best_epoch = 16 and best_val_0_rmsle = 0.15524\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!\n",
      "  warnings.warn(wrn_msg)\n"
     ]
    }
   ],
   "source": [
    "from pytorch_tabnet.tab_model import TabNetRegressor\n",
    "\n",
    "clf = TabNetRegressor(n_steps=3, cat_idxs=[7,8,9], cat_dims=[2,2,2], device_name=\"cuda\")\n",
    "clf.fit(\n",
    "    X_train, y_train,\n",
    "    eval_set=[(X_val, y_val)],\n",
    "    eval_metric=['rmsle'], \n",
    ")\n",
    "y_val_pred_tabnet = clf.predict(X_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4a68eeee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:37:46.474092Z",
     "iopub.status.busy": "2024-04-16T08:37:46.473491Z",
     "iopub.status.idle": "2024-04-16T08:37:46.477922Z",
     "shell.execute_reply": "2024-04-16T08:37:46.476855Z"
    },
    "papermill": {
     "duration": 0.021443,
     "end_time": "2024-04-16T08:37:46.480058",
     "exception": false,
     "start_time": "2024-04-16T08:37:46.458615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# from pytorch_tabnet.multitask import TabNetMultiTaskClassifier\n",
    "# clf2 = TabNetMultiTaskClassifier()\n",
    "# clf2.fit(\n",
    "#     X_train, y_train,\n",
    "#     eval_set=[(X_val, y_val)],\n",
    "#     eval_metric=['rmsle'], \n",
    "# )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c51923fb",
   "metadata": {
    "papermill": {
     "duration": 0.012588,
     "end_time": "2024-04-16T08:37:46.505553",
     "exception": false,
     "start_time": "2024-04-16T08:37:46.492965",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# XGB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fd3bf1fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:37:46.532935Z",
     "iopub.status.busy": "2024-04-16T08:37:46.532543Z",
     "iopub.status.idle": "2024-04-16T08:37:47.341063Z",
     "shell.execute_reply": "2024-04-16T08:37:47.339284Z"
    },
    "papermill": {
     "duration": 0.82531,
     "end_time": "2024-04-16T08:37:47.343563",
     "exception": false,
     "start_time": "2024-04-16T08:37:46.518253",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation RMSE: 1.8624415950332058\n"
     ]
    }
   ],
   "source": [
    "from xgboost import XGBRegressor\n",
    "xgb_model = XGBRegressor()\n",
    "xgb_model.fit(X_train, y_train)\n",
    "# Making predictions on the validation set\n",
    "y_val_pred_xgb = xgb_model.predict(X_val)\n",
    "\n",
    "# evaluate the model\n",
    "val_rmse = mean_squared_error(y_val, y_val_pred_xgb, squared=False)\n",
    "print(\"Validation RMSE:\", val_rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "553ce92a",
   "metadata": {
    "papermill": {
     "duration": 0.01292,
     "end_time": "2024-04-16T08:37:47.369637",
     "exception": false,
     "start_time": "2024-04-16T08:37:47.356717",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# LGBM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "33f16f5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:37:47.399655Z",
     "iopub.status.busy": "2024-04-16T08:37:47.399109Z",
     "iopub.status.idle": "2024-04-16T08:37:49.042321Z",
     "shell.execute_reply": "2024-04-16T08:37:49.041086Z"
    },
    "papermill": {
     "duration": 1.66072,
     "end_time": "2024-04-16T08:37:49.044978",
     "exception": false,
     "start_time": "2024-04-16T08:37:47.384258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/utils/validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.007965 seconds.\n",
      "You can set `force_col_wise=true` to remove the overhead.\n",
      "[LightGBM] [Info] Total Bins 1336\n",
      "[LightGBM] [Info] Number of data points in the train set: 75833, number of used features: 10\n",
      "[LightGBM] [Info] Start training from score 9.711972\n",
      "Validation RMSE: 1.8670301071436686\n"
     ]
    }
   ],
   "source": [
    "import lightgbm as lgb\n",
    "lgb_model = lgb.LGBMRegressor()\n",
    "lgb_model.fit(X_train, y_train)\n",
    "# Making predictions on the validation set\n",
    "y_val_pred_lgb = lgb_model.predict(X_val)\n",
    "\n",
    "# evaluate the model\n",
    "val_rmse = mean_squared_error(y_val, y_val_pred_lgb, squared=False)\n",
    "print(\"Validation RMSE:\", val_rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b34f05e7",
   "metadata": {
    "papermill": {
     "duration": 0.012928,
     "end_time": "2024-04-16T08:37:49.071263",
     "exception": false,
     "start_time": "2024-04-16T08:37:49.058335",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7b2940bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:37:49.099879Z",
     "iopub.status.busy": "2024-04-16T08:37:49.099144Z",
     "iopub.status.idle": "2024-04-16T08:38:31.088428Z",
     "shell.execute_reply": "2024-04-16T08:38:31.087227Z"
    },
    "papermill": {
     "duration": 42.019123,
     "end_time": "2024-04-16T08:38:31.103531",
     "exception": false,
     "start_time": "2024-04-16T08:37:49.084408",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/3979043488.py:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  rf_model.fit(X_train, y_train)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation RMSE: 1.8846427682614055\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "rf_model = RandomForestRegressor()\n",
    "rf_model.fit(X_train, y_train)\n",
    "# Making predictions on the validation set\n",
    "y_val_pred_rf = rf_model.predict(X_val)\n",
    "# evaluate the model\n",
    "val_rmse = mean_squared_error(y_val, y_val_pred_rf, squared=False)\n",
    "print(\"Validation RMSE:\", val_rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8b783fe",
   "metadata": {
    "papermill": {
     "duration": 0.013122,
     "end_time": "2024-04-16T08:38:31.130489",
     "exception": false,
     "start_time": "2024-04-16T08:38:31.117367",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gradient Boosting Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a6cc372f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:31.160531Z",
     "iopub.status.busy": "2024-04-16T08:38:31.160082Z",
     "iopub.status.idle": "2024-04-16T08:38:41.499350Z",
     "shell.execute_reply": "2024-04-16T08:38:41.498183Z"
    },
    "papermill": {
     "duration": 10.357757,
     "end_time": "2024-04-16T08:38:41.501578",
     "exception": false,
     "start_time": "2024-04-16T08:38:31.143821",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation RMSE: 1.9118388451829236\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "gb_model = GradientBoostingRegressor()\n",
    "gb_model.fit(X_train, y_train)\n",
    "# Making predictions on the validation set\n",
    "y_val_pred_gb = gb_model.predict(X_val)\n",
    "# evaluate the model\n",
    "val_rmse = mean_squared_error(y_val, y_val_pred_gb, squared=False)\n",
    "print(\"Validation RMSE:\", val_rmse)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4b19d21",
   "metadata": {
    "papermill": {
     "duration": 0.013281,
     "end_time": "2024-04-16T08:38:41.528582",
     "exception": false,
     "start_time": "2024-04-16T08:38:41.515301",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# NODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0a8b583b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:41.558220Z",
     "iopub.status.busy": "2024-04-16T08:38:41.557139Z",
     "iopub.status.idle": "2024-04-16T08:38:41.565015Z",
     "shell.execute_reply": "2024-04-16T08:38:41.564150Z"
    },
    "papermill": {
     "duration": 0.02489,
     "end_time": "2024-04-16T08:38:41.566879",
     "exception": false,
     "start_time": "2024-04-16T08:38:41.541989",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# class NODEModel(nn.Module):\n",
    "#     \"\"\"\n",
    "#     Neural Oblivious Decision Ensembles (NODE) model.\n",
    "#     \"\"\"\n",
    "#     def __init__(self, input_dim, num_trees, depth):\n",
    "#         \"\"\"\n",
    "#         Initialize the NODE model.\n",
    "        \n",
    "#         Args:\n",
    "#             input_dim (int): Number of input features.\n",
    "#             num_trees (int): Number of decision trees in the ensemble.\n",
    "#             depth (int): Depth of each decision tree.\n",
    "#         \"\"\"\n",
    "#         super(NODEModel, self).__init__()\n",
    "#         self.num_trees = num_trees\n",
    "#         self.depth = depth\n",
    "        \n",
    "#         # Create a list of decision trees\n",
    "#         self.trees = nn.ModuleList([nn.Sequential(\n",
    "#             nn.Linear(input_dim, 2 ** depth),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(2 ** depth, 1)\n",
    "#         ) for _ in range(num_trees)])\n",
    "    \n",
    "#     def forward(self, x):\n",
    "#         \"\"\"\n",
    "#         Perform forward pass through the NODE model.\n",
    "        \n",
    "#         Args:\n",
    "#             x (torch.Tensor): Input tensor.\n",
    "            \n",
    "#         Returns:\n",
    "#             torch.Tensor: Averaged predictions from all decision trees.\n",
    "#         \"\"\"\n",
    "#         # Forward pass through each decision tree\n",
    "#         outputs = [tree(x) for tree in self.trees]\n",
    "        \n",
    "#         # Average the predictions from all trees\n",
    "#         return torch.mean(torch.stack(outputs), dim=0)\n",
    "\n",
    "# class AbaloneDataset(Dataset):\n",
    "#     \"\"\"\n",
    "#     Custom dataset class for abalone data.\n",
    "#     \"\"\"\n",
    "#     def __init__(self, X, y=None):\n",
    "#         \"\"\"\n",
    "#         Initialize the AbaloneDataset.\n",
    "        \n",
    "#         Args:\n",
    "#             X (numpy.ndarray): Input features.\n",
    "#             y (numpy.ndarray, optional): Target variable. Defaults to None.\n",
    "#         \"\"\"\n",
    "#         self.X = torch.tensor(X, dtype=torch.float32)\n",
    "#         self.y = torch.tensor(y, dtype=torch.float32) if y is not None else None\n",
    "    \n",
    "#     def __len__(self):\n",
    "#         \"\"\"\n",
    "#         Return the length of the dataset.\n",
    "        \n",
    "#         Returns:\n",
    "#             int: Length of the dataset.\n",
    "#         \"\"\"\n",
    "#         return len(self.X)\n",
    "    \n",
    "#     def __getitem__(self, idx):\n",
    "#         \"\"\"\n",
    "#         Get an item from the dataset.\n",
    "        \n",
    "#         Args:\n",
    "#             idx (int): Index of the item.\n",
    "            \n",
    "#         Returns:\n",
    "#             tuple: Input features and target variable (if available) for the given index.\n",
    "#         \"\"\"\n",
    "#         if self.y is not None:\n",
    "#             return self.X[idx], self.y[idx]\n",
    "#         else:\n",
    "#             return self.X[idx]\n",
    "\n",
    "# params = {\n",
    "#         'num_trees': trial.suggest_int('num_trees', 50, 200),\n",
    "#         'depth': trial.suggest_int('depth', 4, 8),\n",
    "#         'num_epochs': 200,\n",
    "#         'batch_size': trial.suggest_int('batch_size', 16, 128),\n",
    "#         'learning_rate': trial.suggest_float('learning_rate', 1e-4, 1e-2, log=True),\n",
    "#         'early_stopping_patience': 10\n",
    "#     }\n",
    "# input_dim = X_train.shape[1]\n",
    "# num_trees = params['num_trees']\n",
    "# depth = params['depth']\n",
    "# num_epochs = params['num_epochs']\n",
    "# batch_size = params['batch_size']\n",
    "# learning_rate = params['learning_rate']\n",
    "# early_stopping_patience = params['early_stopping_patience']\n",
    "\n",
    "# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# model = NODEModel(input_dim, num_trees, depth).to(device)\n",
    "# criterion = nn.MSELoss()\n",
    "# optimizer = optim.Adam(model.parameters(), lr=learning_rate)\n",
    "\n",
    "# for epoch in range(params[\"num_epochs\"]):\n",
    "#     model.train()\n",
    "#     optimizer.zero_grad()\n",
    "#     outputs = model(X_train)\n",
    "#     loss = criterion(outputs.squeeze(), y_train)\n",
    "#     loss.backward()\n",
    "#     optimizer.step()\n",
    "\n",
    "# model.eval()\n",
    "# with torch.no_grad():\n",
    "#     outputs = model(X_val)\n",
    "#     val_predictions.extend(outputs.squeeze().cpu().numpy())\n",
    "# val_rmse = np.sqrt(mean_squared_error(val_targets, val_predictions))\n",
    "# print(f\"Validation RMSE: {val_rmse:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "57dfa809",
   "metadata": {
    "papermill": {
     "duration": 0.014798,
     "end_time": "2024-04-16T08:38:41.595323",
     "exception": false,
     "start_time": "2024-04-16T08:38:41.580525",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2e2444a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:41.624915Z",
     "iopub.status.busy": "2024-04-16T08:38:41.624186Z",
     "iopub.status.idle": "2024-04-16T08:38:41.653824Z",
     "shell.execute_reply": "2024-04-16T08:38:41.652639Z"
    },
    "papermill": {
     "duration": 0.048309,
     "end_time": "2024-04-16T08:38:41.657198",
     "exception": false,
     "start_time": "2024-04-16T08:38:41.608889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "Ridge()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.metrics import mean_squared_error\n",
    "X_stacked_train = np.column_stack((y_val_pred_tabnet, y_val_pred_xgb, y_val_pred_rf, y_val_pred_gb, y_val_pred_lgb))\n",
    "# use Ridge regression\n",
    "ridge_regressor = Ridge(alpha=1.0)  # adjust alpha parameter\n",
    "ridge_regressor.fit(X_stacked_train, y_val)  # y_val is the true val label\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "da7c9dac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:41.706912Z",
     "iopub.status.busy": "2024-04-16T08:38:41.706200Z",
     "iopub.status.idle": "2024-04-16T08:38:41.999847Z",
     "shell.execute_reply": "2024-04-16T08:38:41.998676Z"
    },
    "papermill": {
     "duration": 0.321287,
     "end_time": "2024-04-16T08:38:42.002207",
     "exception": false,
     "start_time": "2024-04-16T08:38:41.680920",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# 获取岭回归模型的系数\n",
    "ridge_coefs = ridge_regressor.coef_.ravel()\n",
    "ridge_coefs = ridge_coefs.ravel()  # 将系数展平为一维数组\n",
    "# 特征名称\n",
    "feature_names = ['TabNet', 'XGBoost', 'Random Forest', 'Gradient Boosting', 'LightGBM']\n",
    "\n",
    "# 绘制柱状图\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(feature_names, ridge_coefs)\n",
    "plt.title('Coefficients of Ridge Regression')\n",
    "plt.xlabel('Features')\n",
    "plt.ylabel('Coefficient Value')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b0dc7e52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:42.034436Z",
     "iopub.status.busy": "2024-04-16T08:38:42.034037Z",
     "iopub.status.idle": "2024-04-16T08:38:42.123308Z",
     "shell.execute_reply": "2024-04-16T08:38:42.122299Z"
    },
    "papermill": {
     "duration": 0.108596,
     "end_time": "2024-04-16T08:38:42.125978",
     "exception": false,
     "start_time": "2024-04-16T08:38:42.017382",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = test_dataset.drop(columns=[\"id\"]).values\n",
    "test_id = test_dataset[\"id\"].values\n",
    "sex_features = X[:,-3:]\n",
    "X_without_sex = X[:, :-3]\n",
    "sex_features_numeric = sex_features.astype(int)\n",
    "scaler = StandardScaler()\n",
    "X_scaled_ws = scaler.fit_transform(X_without_sex)\n",
    "test_scaled = np.concatenate((X_scaled_ws, sex_features_numeric), axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a83074d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:42.157694Z",
     "iopub.status.busy": "2024-04-16T08:38:42.157282Z",
     "iopub.status.idle": "2024-04-16T08:38:43.561391Z",
     "shell.execute_reply": "2024-04-16T08:38:43.560211Z"
    },
    "papermill": {
     "duration": 1.422583,
     "end_time": "2024-04-16T08:38:43.563748",
     "exception": false,
     "start_time": "2024-04-16T08:38:42.141165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 9.59613 ]\n",
      " [ 9.459299]\n",
      " [ 9.777443]\n",
      " ...\n",
      " [12.728162]\n",
      " [12.583682]\n",
      " [ 8.63789 ]]\n",
      "[ 9.59613   9.459299  9.777443 ... 12.728162 12.583682  8.63789 ]\n"
     ]
    }
   ],
   "source": [
    "y_test_pred_tabnet = clf.predict(test_scaled)\n",
    "\n",
    "print(y_test_pred_tabnet)\n",
    "print(y_test_pred_tabnet.flatten())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d3df0df9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:43.596042Z",
     "iopub.status.busy": "2024-04-16T08:38:43.594900Z",
     "iopub.status.idle": "2024-04-16T08:38:43.676382Z",
     "shell.execute_reply": "2024-04-16T08:38:43.675504Z"
    },
    "papermill": {
     "duration": 0.100654,
     "end_time": "2024-04-16T08:38:43.678870",
     "exception": false,
     "start_time": "2024-04-16T08:38:43.578216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_test_pred_xgb = xgb_model.predict(test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e9cac691",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:43.711432Z",
     "iopub.status.busy": "2024-04-16T08:38:43.710203Z",
     "iopub.status.idle": "2024-04-16T08:38:45.899486Z",
     "shell.execute_reply": "2024-04-16T08:38:45.898234Z"
    },
    "papermill": {
     "duration": 2.208323,
     "end_time": "2024-04-16T08:38:45.902261",
     "exception": false,
     "start_time": "2024-04-16T08:38:43.693938",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_test_pred_rf = rf_model.predict(test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0f8cc6cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:45.935521Z",
     "iopub.status.busy": "2024-04-16T08:38:45.935071Z",
     "iopub.status.idle": "2024-04-16T08:38:46.053070Z",
     "shell.execute_reply": "2024-04-16T08:38:46.051858Z"
    },
    "papermill": {
     "duration": 0.137766,
     "end_time": "2024-04-16T08:38:46.055576",
     "exception": false,
     "start_time": "2024-04-16T08:38:45.917810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_test_pred_gb = gb_model.predict(test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "03fca2e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:46.086712Z",
     "iopub.status.busy": "2024-04-16T08:38:46.086233Z",
     "iopub.status.idle": "2024-04-16T08:38:46.265169Z",
     "shell.execute_reply": "2024-04-16T08:38:46.263860Z"
    },
    "papermill": {
     "duration": 0.19744,
     "end_time": "2024-04-16T08:38:46.267838",
     "exception": false,
     "start_time": "2024-04-16T08:38:46.070398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_test_pred_lgb = lgb_model.predict(test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9a94f7ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:46.299014Z",
     "iopub.status.busy": "2024-04-16T08:38:46.298601Z",
     "iopub.status.idle": "2024-04-16T08:38:46.310720Z",
     "shell.execute_reply": "2024-04-16T08:38:46.309513Z"
    },
    "papermill": {
     "duration": 0.031574,
     "end_time": "2024-04-16T08:38:46.314140",
     "exception": false,
     "start_time": "2024-04-16T08:38:46.282566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[10.27302141]\n",
      " [ 9.76043113]\n",
      " [10.23775309]\n",
      " ...\n",
      " [12.39735701]\n",
      " [12.65680548]\n",
      " [ 8.67683851]]\n"
     ]
    }
   ],
   "source": [
    "# 使用集成模型进行预测\n",
    "X_stacked_test = np.column_stack((y_test_pred_tabnet, y_test_pred_xgb, y_test_pred_rf, y_test_pred_gb, y_test_pred_lgb))\n",
    "y_test_pred_ensemble = ridge_regressor.predict(X_stacked_test)\n",
    "print(y_test_pred_ensemble)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "712f9ccd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-16T08:38:46.367789Z",
     "iopub.status.busy": "2024-04-16T08:38:46.367004Z",
     "iopub.status.idle": "2024-04-16T08:38:46.542987Z",
     "shell.execute_reply": "2024-04-16T08:38:46.541785Z"
    },
    "papermill": {
     "duration": 0.205957,
     "end_time": "2024-04-16T08:38:46.545923",
     "exception": false,
     "start_time": "2024-04-16T08:38:46.339966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "result_df = pd.DataFrame({'id': test_id, 'Rings': y_test_pred_ensemble.flatten()})\n",
    "# 将DataFrame保存到CSV文件中\n",
    "result_df.to_csv('submission.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8096274,
     "sourceId": 72489,
     "sourceType": "competition"
    },
    {
     "datasetId": 4790313,
     "sourceId": 8109578,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30684,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 203.141522,
   "end_time": "2024-04-16T08:38:49.176948",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-16T08:35:26.035426",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
